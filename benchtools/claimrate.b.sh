#!/bin/bash

cat <<EOT
# Claimrates (autogenerated, do not edit!)

REPODIR=/home/ingo/memtester/rampage
SCRIPTDIR=<REPODIR>/benchtools
KERNELDIR=/home/ingo/memtester/bench/linux-2.6.35
RESULTDIR=/home/ingo/memtester/results/claimrates-2012-09-01

MTARGS=-a blockwise --run-time 86400 --retest-time 86400 -4 -t mt86\* -f 5120

CLEANUP=<SCRIPTDIR>/cleanup-logs.sh
SLEEPTIME=3600

run mkdir -p <RESULTDIR>

iterate 1
EOT

memtester() {
	local bench=$1
	local claimer=$2
	echo -n "run <SCRIPTDIR>/start-memtest.sh <REPODIR> <MTARGS> --logfile <RESULTDIR>/framelog-claimrate-$bench-$claimer-<ITERATION> --enable-p4-claimers="
	case $claimer in
	b) echo "buddy" ;;
	bh) echo "buddy,hotplug-claim" ;;
	bhs) echo "buddy,hotplug-claim,shaking" ;;
	esac
}

for bench in idle fullcache memhog cache+memhog; do
	for claimer in b bh bhs; do
		echo "# Claimrate: bench = $bench, claimer = $claimer"
		echo "reboot"
		echo "run <CLEANUP>"
		if [ $bench = idle ]; then
			memtester $bench $claimer
			echo "run sleep <SLEEPTIME>"
		elif [ $bench = fullcache ]; then
			echo "run <SCRIPTDIR>/fill_cache.sh"
			memtester $bench $claimer
			echo "run sleep <SLEEPTIME>"
		elif [ $bench = memhog ]; then
			memtester $bench $claimer
			echo "run <SCRIPTDIR>/memhog.sh <SLEEPTIME>"
		elif [ $bench = "cache+memhog" ]; then
			echo "run <SCRIPTDIR>/fill_cache.sh"
			memtester $bench $claimer
			echo "run <SCRIPTDIR>/memhog.sh <SLEEPTIME>"
		fi
		echo "run date > <RESULTDIR>/claimrate-$bench-$claimer-<ITERATION>-OK"
		echo ''
	done
	echo ''
done

echo "enditer"
echo "reboot"
